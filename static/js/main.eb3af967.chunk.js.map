{"version":3,"sources":["component/List.js","component/Map.js","App.js","index.js"],"names":["List","address","name","dpx","dpy","map","className","onClick","setCenter","kakao","maps","LatLng","setLevel","Map","useState","setMap","useEffect","mapscript","isLoding","setIsLoding","pois","setPoi","keywords","setInputs","list","document","querySelector","map_content","container","getElementById","options","center","level","window","getList","a","axios","get","data","Number","header","resultCode","classList","add","search","poi","bounds","LatLngBounds","displayMarker","extend","place","marker","Marker","position","infowindow","InfoWindow","content","name1","event","addListener","makeOverListener","makeOutListener","open","close","id","type","onChange","e","target","value","Fragment","poiid","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb3af967.chunk.js","sourcesContent":["/*global kakao */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction List({address, name, dpx, dpy, map}) {\r\n\r\n    const getCenter = () => {\r\n      \r\n        map.setCenter(new kakao.maps.LatLng(dpy, dpx));\r\n        map.setLevel(1);\r\n    }\r\n    \r\n    return(\r\n       \r\n        <div className=\"list_content\" onClick={getCenter}>\r\n            <span>{address}</span>\r\n            <span>{name}</span>\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nList.propTypes = {\r\n    address: PropTypes.string.isRequired\r\n}\r\n\r\nexport default List;","/*global kakao */\r\nimport React, {useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./List\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default function Map(){\r\n\r\n  \r\n    const [map, setMap] = useState();\r\n\r\n    useEffect(() => {        \r\n       mapscript();  \r\n    }, []);\r\n\r\n    let [isLoding, setIsLoding] = useState(true);\r\n    let [isSuccessful] = useState(0);\r\n    const [pois, setPoi] = useState([]);\r\n    const [keywords, setInputs] = useState(\"\");\r\n    const list = document.querySelector('.list');\r\n    const map_content = document.querySelector('.section.map');\r\n\r\n    const onChange = (e) => {\r\n        \r\n        map_content.classList.add('fix');\r\n        list.classList.add('on');\r\n\r\n        setIsLoding(true);\r\n        setInputs(e.target.value);\r\n        getList();\r\n        \r\n    }\r\n\r\n    const mapscript = () => {\r\n        \r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n            center: new kakao.maps.LatLng(37.506502, 127.053617),\r\n            level: 7\r\n        };\r\n        \r\n        setMap(new window.kakao.maps.Map(container, options));       \r\n    };\r\n\r\n    const getList = async() => {\r\n\r\n        const { data } = await axios.get(\"https://api-maps.cloud.toast.com/maps/v3.0/appkeys/ZJgW6dKQUUSNYWop/searches?query=\"+ keywords + \"&startposition=0&reqcount=10\");\r\n        isSuccessful = Number(data.header.resultCode);\r\n        \r\n        if(isSuccessful == 0){\r\n            map_content.classList.add('fix');\r\n            setPoi(data.search.poi);\r\n            const bounds = new kakao.maps.LatLngBounds();\r\n            data.search.poi.map(poi => (\r\n                 displayMarker(poi),\r\n                 bounds.extend(new kakao.maps.LatLng(poi.dpy, poi.dpx))\r\n            ));\r\n            setIsLoding(false);\r\n        }\r\n    }\r\n  \r\n    const displayMarker = (place) => {\r\n\r\n        var marker = new kakao.maps.Marker({\r\n             map: map,\r\n             position: new kakao.maps.LatLng(place.dpy, place.dpx) \r\n         });\r\n       \r\n         marker.setMap(map);\r\n\r\n         var infowindow = new kakao.maps.InfoWindow({\r\n            content: place.name1 // 인포윈도우에 표시할 내용\r\n        });\r\n        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n    }\r\n\r\n    const makeOverListener = (map, marker, infowindow) => {\r\n        \r\n       // infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.name1 + '</div>');\r\n       return function() {\r\n        infowindow.open(map, marker);\r\n       }\r\n        \r\n    }\r\n\r\n    const makeOutListener = (infowindow) => {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n\r\n    return (\r\n      \r\n        <div className=\"container\">\r\n            <div id=\"map\" className=\"section map\"/>  \r\n            <div className=\"section search\">\r\n                <div className=\"keywords_input\">\r\n                    <input type=\"text\" className=\"keywords\" name=\"keywords\" onChange={onChange}/>                \r\n                </div>\r\n                {isLoding ? (\r\n                    <div className=\"list\"></div>\r\n                ) : (\r\n                    <div className=\"list\">\r\n                        {pois.map(poi => (\r\n                            <React.Fragment key={poi.poiid}>\r\n                                <List key={poi.poiid} address={poi.address} name={poi.name1} dpx={poi.dpx} dpy={poi.dpy} map={map}/>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div> \r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from \"react\";\nimport Map from \"./component/Map\";\nimport Input from \"./component/Input\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
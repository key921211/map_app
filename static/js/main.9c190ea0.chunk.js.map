{"version":3,"sources":["component/Map.js","component/List.js","component/Input.js","App.js","index.js"],"names":["Map","pois","useEffect","mapscript","useState","points","setPoints","console","log","map","poi","container","document","getElementById","options","center","kakao","maps","LatLng","level","window","Marker","position","getCenter","setMap","id","List","address","name","className","Input","isLoding","setIsLoding","setPoi","keywords","setInputs","getList","a","axios","get","data","search","type","onChange","e","target","value","onClick","Fragment","name1","poiid","App","ReactDOM","render","StrictMode"],"mappings":"uLAIe,SAASA,EAAT,GAAqB,IAAPC,EAAM,EAANA,KACzBC,qBAAU,WACNC,MACD,IAH4B,MAIHC,mBAAS,IAJN,mBAIxBC,EAJwB,KAIhBC,EAJgB,KAOzBH,EAAY,WACdI,QAAQC,IAAIP,GACZK,EAAUL,GACVI,EAAOI,KAAI,SAAAC,GAAG,OACVH,QAAQC,IAAIE,MAEhBH,QAAQC,IAAIH,GACZ,IAAIM,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACVC,OAAQ,IAAIC,MAAMC,KAAKC,OAAO,UAAW,YACzCC,MAAO,GAGLV,EAAM,IAAIW,OAAOJ,MAAMC,KAAKjB,IAAIW,EAAWG,GAUpC,IAAIE,MAAMC,KAAKI,OAAO,CAC/BC,SAAUb,EAAIc,cAIXC,OAAOf,IASlB,OACI,qBAAKgB,GAAG,Q,mDC7BDC,MAhBf,YAAgC,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,KAEpB,OAEI,sBAAKC,UAAU,eAAf,UACI,+BAAOF,IACP,+BAAOC,QC0CJE,MA9Cf,WAAiB,IAAD,EAEoB1B,oBAAS,GAF7B,mBAEL2B,EAFK,KAEKC,EAFL,OAGW5B,mBAAS,IAHpB,mBAGLH,EAHK,KAGCgC,EAHD,OAIkB7B,mBAAS,IAJ3B,mBAIL8B,EAJK,KAIKC,EAJL,KAgBNC,EAAO,uCAAG,8BAAAC,EAAA,6DACZ9B,QAAQC,IAAI0B,GADA,SAGgCI,IAAMC,IAAI,sFAAuFL,EAAW,gCAH5I,gBAGgBxB,EAHhB,EAGJ8B,KAASC,OAAW/B,IAC5BuB,EAAOvB,GACPsB,GAAY,GALA,2CAAH,qDAOb,OACI,sBAAKH,UAAU,QAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOa,KAAK,OAAOb,UAAU,WAAWD,KAAK,WAAWe,SApBnD,SAACC,GAEdT,EAAUS,EAAEC,OAAOC,UAmBX,wBAAQC,QAhBJ,WAEZX,KAcQ,6BAEHL,EACG,qBAAKF,UAAU,SAEf,sBAAKA,UAAU,OAAf,UACC5B,EAAKQ,KAAI,SAAAC,GAAG,OACT,cAAC,IAAMsC,SAAP,UACI,cAAC,EAAD,CAAsBrB,QAASjB,EAAIiB,QAASC,KAAMlB,EAAIuC,OAA3CvC,EAAIwC,QADExC,EAAIwC,UAI7B,cAAClD,EAAD,CAAKC,KAAMA,WC9BZkD,MATf,WACE,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC7B,EAAD,IACA,cAAC,EAAD,QCLNoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAASC,eAAe,U","file":"static/js/main.9c190ea0.chunk.js","sourcesContent":["/*global kakao */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nexport default function Map({pois}){\r\n    useEffect(() => {\r\n        mapscript();\r\n    }, []);\r\n    const [points, setPoints] = useState([]);\r\n\r\n\r\n    const mapscript = () => {\r\n        console.log(pois);\r\n        setPoints(pois);\r\n        points.map(poi => (\r\n            console.log(poi)\r\n            ));\r\n        console.log(points);\r\n        let container = document.getElementById(\"map\");\r\n        let options = {\r\n            center: new kakao.maps.LatLng(37.506502, 127.053617),\r\n            level: 7\r\n        };\r\n\r\n        const map = new window.kakao.maps.Map(container, options);\r\n        \r\n        \r\n        //마커가 표시 될 위치\r\n        //  let markerPosition = new kakao.maps.LatLng(\r\n        //      locationX,\r\n        //      locationX\r\n        // );\r\n           \r\n        // 마커를 생성\r\n        let marker = new kakao.maps.Marker({\r\n            position: map.getCenter() \r\n        });\r\n    \r\n        // 마커를 지도 위에 표시\r\n        marker.setMap(map);\r\n        \r\n        // kakao.maps.event.addListener(map, 'click', function(mouseEvent) {\r\n            \r\n        //     let latlng = mouseEvent.latLng; \r\n        //     marker.setPosition(latlng);\r\n            \r\n        // });\r\n    };\r\n    return (\r\n        <div id=\"map\" />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./Map.css\";\r\n\r\nfunction List({address, name}) {\r\n\r\n    return(\r\n       \r\n        <div className=\"list_content\">\r\n            <span>{address}</span>\r\n            <span>{name}</span>\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nList.propTypes = {\r\n    address: PropTypes.string.isRequired\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./List\"\r\nimport Map from \"./Map\"\r\nimport \"../App.css\"\r\nimport \"./Map.css\";\r\nfunction Input(){\r\n    \r\n    const [isLoding, setIsLoding] = useState(true);\r\n    const [pois, setPoi] = useState([]);\r\n    const [keywords, setInputs] = useState(\"\");\r\n    \r\n    const onChange = (e) => {\r\n\r\n        setInputs(e.target.value);\r\n    }\r\n   \r\n    const onClick = () => {\r\n\r\n        getList();  \r\n    }\r\n\r\n    const getList = async() => {\r\n        console.log(keywords);\r\n\r\n        const { data : { search : { poi }}} = await axios.get(\"https://api-maps.cloud.toast.com/maps/v3.0/appkeys/ZJgW6dKQUUSNYWop/searches?query=\"+ keywords + \"&startposition=0&reqcount=10\");\r\n        setPoi(poi);\r\n        setIsLoding(false);\r\n    }\r\n    return (\r\n        <div className=\"input\">\r\n            <div className=\"keywords_input\">\r\n                <input type=\"text\" className=\"keywords\" name=\"keywords\" onChange={onChange}/>\r\n                <button onClick={onClick}>검색</button>\r\n            </div>\r\n            {isLoding ? (\r\n                <div className=\"list\"></div>\r\n            ) : (\r\n                <div className=\"list\">\r\n                {pois.map(poi => (\r\n                    <React.Fragment key={poi.poiid}>\r\n                        <List key={poi.poiid} address={poi.address} name={poi.name1}/>\r\n                    </React.Fragment>\r\n                ))}\r\n                <Map pois={pois}/>\r\n            </div>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from \"react\";\nimport Map from \"./component/Map\";\nimport Input from \"./component/Input\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n      <Input />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
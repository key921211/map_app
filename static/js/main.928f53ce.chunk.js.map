{"version":3,"sources":["component/List.js","component/Map.js","App.js","index.js"],"names":["List","address","name","className","Map","useState","map","setMap","useEffect","mapscript","isLoding","setIsLoding","pois","setPoi","keywords","setInputs","container","document","getElementById","options","center","kakao","maps","LatLng","level","window","getList","a","axios","get","data","Number","header","resultCode","search","poi","bounds","LatLngBounds","displayMarker","extend","dpy","dpx","place","marker","Marker","position","infowindow","InfoWindow","content","name1","event","addListener","makeOverListener","makeOutListener","open","close","id","type","onChange","e","target","value","onClick","Fragment","poiid","App","ReactDOM","render","StrictMode"],"mappings":"+NAoBeA,MAhBf,YAAgC,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,KAEpB,OAEI,sBAAKC,UAAU,eAAf,UACI,+BAAOF,IACP,+BAAOC,Q,KCHJ,SAASE,IAAM,IAAD,EAGHC,qBAHG,mBAGlBC,EAHkB,KAGbC,EAHa,KAKzBC,qBAAU,WACNC,MACD,IAPsB,MASKJ,oBAAS,GATd,mBASpBK,EAToB,KASVC,EATU,OAUJN,mBAAS,GAVL,uBAWFA,mBAAS,KAXP,mBAWlBO,EAXkB,KAWZC,EAXY,OAYKR,mBAAS,IAZd,mBAYlBS,EAZkB,KAYRC,EAZQ,KAwBnBN,EAAY,WAEd,IAAMO,EAAYC,SAASC,eAAe,OACpCC,EAAU,CACZC,OAAQ,IAAIC,MAAMC,KAAKC,OAAO,UAAW,YACzCC,MAAO,GAGXjB,EAAO,IAAIkB,OAAOJ,MAAMC,KAAKlB,IAAIY,EAAWG,KAI1CO,EAAO,uCAAG,gCAAAC,EAAA,sEAEWC,IAAMC,IAAI,sFAAuFf,EAAW,gCAFvH,gBAEJgB,EAFI,EAEJA,KAGW,GAFJC,OAAOD,EAAKE,OAAOC,cAG9BpB,EAAOiB,EAAKI,OAAOC,KACbC,EAAS,IAAIf,MAAMC,KAAKe,aAC9BP,EAAKI,OAAOC,IAAI7B,KAAI,SAAA6B,GAAG,OAClBG,EAAcH,GACdC,EAAOG,OAAO,IAAIlB,MAAMC,KAAKC,OAAOY,EAAIK,IAAKL,EAAIM,SAEtD9B,GAAY,IAZJ,2CAAH,qDAgBP2B,EAAgB,SAACI,GAInB,IAAIC,EAAS,IAAItB,MAAMC,KAAKsB,OAAO,CAC9BtC,IAAKA,EACLuC,SAAU,IAAIxB,MAAMC,KAAKC,OAAOmB,EAAMF,IAAKE,EAAMD,OAGrDE,EAAOpC,OAAOD,GAEd,IAAIwC,EAAa,IAAIzB,MAAMC,KAAKyB,WAAW,CACxCC,QAASN,EAAMO,QAEnB5B,MAAMC,KAAK4B,MAAMC,YAAYR,EAAQ,YAAaS,EAAiB9C,EAAKqC,EAAQG,IAChFzB,MAAMC,KAAK4B,MAAMC,YAAYR,EAAQ,WAAYU,EAAgBP,KAG/DM,EAAmB,SAAC9C,EAAKqC,EAAQG,GAGpC,OAAO,WACNA,EAAWQ,KAAKhD,EAAKqC,KAKnBU,EAAkB,SAACP,GACrB,OAAO,WACHA,EAAWS,UAInB,OAEI,sBAAKpD,UAAU,QAAf,UACA,qBAAKqD,GAAG,QACR,sBAAKrD,UAAU,SAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,uBAAOsD,KAAK,OAAOtD,UAAU,WAAWD,KAAK,WAAWwD,SA7EnD,SAACC,GACdhD,GAAY,GACZI,EAAU4C,EAAEC,OAAOC,UA4EX,wBAAQC,QAzEJ,WAEZpC,KAuEQ,6BAEHhB,EACG,qBAAKP,UAAU,SAEf,qBAAKA,UAAU,OAAf,SACKS,EAAKN,KAAI,SAAA6B,GAAG,OACT,cAAC,IAAM4B,SAAP,UACI,cAAC,EAAD,CAAsB9D,QAASkC,EAAIlC,QAASC,KAAMiC,EAAIc,OAA3Cd,EAAI6B,QADE7B,EAAI6B,kBC5FlCC,MATf,WACE,OACE,qBAAK9D,UAAU,MAAf,SACE,cAAC,EAAD,OCJN+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASC,eAAe,U","file":"static/js/main.928f53ce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./Map.css\";\r\n\r\nfunction List({address, name}) {\r\n    \r\n    return(\r\n       \r\n        <div className=\"list_content\">\r\n            <span>{address}</span>\r\n            <span>{name}</span>\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nList.propTypes = {\r\n    address: PropTypes.string.isRequired\r\n}\r\n\r\nexport default List;","/*global kakao */\r\nimport React, {useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./List\";\r\nimport \"../App.css\";\r\n\r\n\r\nexport default function Map(){\r\n\r\n  \r\n    const [map, setMap] = useState();\r\n\r\n    useEffect(() => {        \r\n        mapscript();  \r\n    }, []);\r\n\r\n    let [isLoding, setIsLoding] = useState(true);\r\n    let [isSuccessful] = useState(0);\r\n    const [pois, setPoi] = useState([]);\r\n    const [keywords, setInputs] = useState(\"\");\r\n    \r\n    const onChange = (e) => {\r\n        setIsLoding(true);\r\n        setInputs(e.target.value);\r\n    }\r\n   \r\n    const onClick = () => {\r\n\r\n        getList();  \r\n    }\r\n\r\n    const mapscript = () => {\r\n        \r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n            center: new kakao.maps.LatLng(37.506502, 127.053617),\r\n            level: 7\r\n        };\r\n        \r\n        setMap(new window.kakao.maps.Map(container, options));\r\n       \r\n       \r\n    };\r\n    const getList = async() => {\r\n\r\n        const { data } = await axios.get(\"https://api-maps.cloud.toast.com/maps/v3.0/appkeys/ZJgW6dKQUUSNYWop/searches?query=\"+ keywords + \"&startposition=0&reqcount=10\");\r\n        isSuccessful = Number(data.header.resultCode);\r\n\r\n        if(isSuccessful == 0){\r\n            setPoi(data.search.poi);\r\n            const bounds = new kakao.maps.LatLngBounds();\r\n            data.search.poi.map(poi => (\r\n                 displayMarker(poi),\r\n                 bounds.extend(new kakao.maps.LatLng(poi.dpy, poi.dpx))\r\n            ));\r\n            setIsLoding(false);\r\n        }\r\n    }\r\n  \r\n    const displayMarker = (place) => {\r\n        \r\n        \r\n        \r\n        var marker = new kakao.maps.Marker({\r\n             map: map,\r\n             position: new kakao.maps.LatLng(place.dpy, place.dpx) \r\n         });\r\n       \r\n         marker.setMap(map);\r\n\r\n         var infowindow = new kakao.maps.InfoWindow({\r\n            content: place.name1 // 인포윈도우에 표시할 내용\r\n        });\r\n        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n    }\r\n\r\n    const makeOverListener = (map, marker, infowindow) => {\r\n        \r\n       // infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.name1 + '</div>');\r\n       return function() {\r\n        infowindow.open(map, marker);\r\n       }\r\n        \r\n    }\r\n\r\n    const makeOutListener = (infowindow) => {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n\r\n    return (\r\n      \r\n        <div className=\"input\">\r\n        <div id=\"map\" />  \r\n        <div className=\"search\">\r\n            <div className=\"keywords_input\">\r\n                <input type=\"text\" className=\"keywords\" name=\"keywords\" onChange={onChange}/>\r\n                <button onClick={onClick}>검색</button>\r\n            </div>\r\n            {isLoding ? (\r\n                <div className=\"list\"></div>\r\n            ) : (\r\n                <div className=\"list\">\r\n                    {pois.map(poi => (\r\n                        <React.Fragment key={poi.poiid}>\r\n                            <List key={poi.poiid} address={poi.address} name={poi.name1}/>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            \r\n            )}\r\n        </div> \r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from \"react\";\nimport Map from \"./component/Map\";\nimport Input from \"./component/Input\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}